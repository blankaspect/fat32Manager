/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class uk_blankaspect_driveio_DriveIO */

#ifndef _Included_uk_blankaspect_driveio_DriveIO
#define _Included_uk_blankaspect_driveio_DriveIO
#ifdef __cplusplus
extern "C" {
#endif
#undef uk_blankaspect_driveio_DriveIO_ACCESS_READ
#define uk_blankaspect_driveio_DriveIO_ACCESS_READ 1L
#undef uk_blankaspect_driveio_DriveIO_ACCESS_WRITE
#define uk_blankaspect_driveio_DriveIO_ACCESS_WRITE 2L
#undef uk_blankaspect_driveio_DriveIO_ACCESS_READ_WRITE
#define uk_blankaspect_driveio_DriveIO_ACCESS_READ_WRITE 3L
#undef uk_blankaspect_driveio_DriveIO_MEDIUM_UNKNOWN
#define uk_blankaspect_driveio_DriveIO_MEDIUM_UNKNOWN 0L
#undef uk_blankaspect_driveio_DriveIO_MEDIUM_REMOVABLE
#define uk_blankaspect_driveio_DriveIO_MEDIUM_REMOVABLE 1L
#undef uk_blankaspect_driveio_DriveIO_MEDIUM_FIXED
#define uk_blankaspect_driveio_DriveIO_MEDIUM_FIXED 2L
#undef uk_blankaspect_driveio_DriveIO_RESULT_SUCCESS
#define uk_blankaspect_driveio_DriveIO_RESULT_SUCCESS 0L
#undef uk_blankaspect_driveio_DriveIO_RESULT_FAILURE
#define uk_blankaspect_driveio_DriveIO_RESULT_FAILURE 1L
#undef uk_blankaspect_driveio_DriveIO_RESULT_ERROR
#define uk_blankaspect_driveio_DriveIO_RESULT_ERROR 2L
#undef uk_blankaspect_driveio_DriveIO_LIBRARY_ID
#define uk_blankaspect_driveio_DriveIO_LIBRARY_ID -241354942L
/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    init
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_init
  (JNIEnv *, jclass);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    getVolumeNames
 * Signature: ([C)I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_getVolumeNames
  (JNIEnv *, jclass, jcharArray);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    getVolumeInfo
 * Signature: ([C[B)I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_getVolumeInfo
  (JNIEnv *, jclass, jcharArray, jbyteArray);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    isVolumeMounted
 * Signature: ([C)Z
 */
JNIEXPORT jboolean JNICALL Java_uk_blankaspect_driveio_DriveIO_isVolumeMounted
  (JNIEnv *, jclass, jcharArray);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    getVolumeMountPoint
 * Signature: ([C[C)I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_getVolumeMountPoint
  (JNIEnv *, jclass, jcharArray, jcharArray);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    isVolumeOpen
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_uk_blankaspect_driveio_DriveIO_isVolumeOpen
  (JNIEnv *, jclass);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    openVolume
 * Signature: ([CI)I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_openVolume
  (JNIEnv *, jclass, jcharArray, jint);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    closeVolume
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_closeVolume
  (JNIEnv *, jclass);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    seekVolume
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_seekVolume
  (JNIEnv *, jclass, jlong);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    readVolume
 * Signature: ([BII)I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_readVolume
  (JNIEnv *, jclass, jbyteArray, jint, jint);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    writeVolume
 * Signature: ([BII)I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_writeVolume
  (JNIEnv *, jclass, jbyteArray, jint, jint);

/*
 * Class:     uk_blankaspect_driveio_DriveIO
 * Method:    getErrorMessage
 * Signature: ([C)I
 */
JNIEXPORT jint JNICALL Java_uk_blankaspect_driveio_DriveIO_getErrorMessage
  (JNIEnv *, jclass, jcharArray);

#ifdef __cplusplus
}
#endif
#endif
